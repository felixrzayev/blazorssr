@page "/servers"
@using ServerManagement.Components.Controls
@inject NavigationManager NavigationManager


<h3>Servers</h3>
<div style="display: flex; gap: 15px; flex-wrap: wrap; justify-content: left;">
	@foreach (var city in cities)
	{
		@* <div style="text-align: center; display: flex; flex-direction: column; align-items: center;"> *@
		@* 	<img src="images/@(city).png" alt="@city"/> *@
		@* 	<br /> *@
		@* 	<button style="padding: 10px; border: none;  *@
		@* 			color: black; border-radius: 5px"> *@
		@* 		@city *@
		@* 	</button> *@
		@* </div> *@

		<div class="card">
			<img src="images/@(city).png" class="card-img-top" alt="@city">
			<div class="card-body">
				<a href="#" class="btn btn-primary">Go somewhere</a>
			</div>
		</div>
	}
</div>


<br />
<ul>
	@foreach(var server in servers) {
		<li>@server.Name in @server.City is 
			<span style="color:@(server.IsOnline ? "green" : "red")">
				@(server.IsOnline ? "online" : "offline")
			</span>
			&nbsp;
			<a href="/servers/@(server.Id)" class="btn btn-link">Edit</a>
			&nbsp;
			<EditForm 
				Model="server" 
				FormName="@($"form-server-{server.Id}")"
				OnValidSubmit="@(() => {DeleteServer(server.Id);})">
				<button type="submit" class="btn btn-outline-primary">Delete</button>
			</EditForm>
		</li>
	}
</ul>
<p>
	<a href="/servers/add" class="btn btn-primary">Add Server</a>
</p>

@code {
	private List<string> cities = CityRepository.GetCities();
	private List<Server> servers = ServersRepositoryModels.GetServersByCity("Montreal");
	private void DeleteServer(int id) 
	{
		if (id > 0) 
		{
			ServersRepositoryModels.DeleteServer(id);
			NavigationManager.NavigateTo("/servers");

		}
	}
}
